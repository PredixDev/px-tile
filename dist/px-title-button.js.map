{"version":3,"sources":["px-title-button.es6.js"],"names":["Polymer","is","properties","titleActionButton","type","Object","value","observer","isOverlay","Boolean","_titleActionButtonChanged","_hasTitleActionButton","key","val","undefined","_isOverlayChanged","_getBtnClazz","clazz","size","_getBtnColor","color","_handleSelection","detail","fire","_btnHoveredclass"],"mappings":"gMAAA,CAAC,UAAW,cACVA,mBAEEC,GAAI,iBAFN,CAIEC,WAAY,CACV;;;SAIAC,kBAAmB,CACjBC,KAAMC,MADW,CAEjBC,MAAO,EAFU,CAGjBC,SAAU,2BAHO,CALT,CAUV;;SAGAC,UAAW,CACTJ,KAAMK,OADG,CAETH,MAAO,KAFE,CAGTC,SAAU,mBAHD,CAbD,CAJd,CAuBE;;;OAIAG,yBA3BF,qCA2B8B,CAC1B,KAAKC,qBAAL,CAA6B,CAAC,KAAKR,iBAAL,GAA2B,KAAKA,iBAAL,CAAuBS,GAAvB,EAA8B,KAAKT,iBAAL,CAAuBU,GAAhF,CAAD,IAA2FC,SAAxH,CACA,KAAKC,iBAAL,EACD,CA9BH,CA+BE;;;OAIAC,YAnCF,uBAmCeb,iBAnCf,CAmCkC,CAC9B,GAAIc,OAAQd,kBAAkBe,IAAlB,EAA0B,EAAtC,CACAD,MAAQA,MAAQ,GAAR,EAAed,kBAAkBC,IAAlB,EAA0B,EAAzC,CAAR,CACA,MAAOa,MACR,CAvCH,CAwCE;;OAGAE,YA3CF,uBA2CehB,iBA3Cf,CA2CkC,CAC9B,GAAIiB,OAAQ,EAAZ,CACA,GAAGjB,kBAAkBiB,KAArB,CAA4B,CAC1BA,MAAQ,UAAYjB,kBAAkBiB,KAA9B,CAAsC,YAAtC,CAAqDjB,kBAAkBiB,KAAvE,CAA+E,IACxF,CACD,MAAOA,MACR,CAjDH,gEAsDejB,iBAtDf,CAsDkC,CAC9B,GAAIc,OAAQd,kBAAkBe,IAAlB,EAA0B,EAAtC,CACAD,MAAQA,MAAQ,GAAR,EAAed,kBAAkBC,IAAlB,EAA0B,EAAzC,CAAR,CACA,MAAOa,MACR,CA1DH,gEA8Ded,iBA9Df,CA8DkC,CAC9B,GAAIiB,OAAQ,EAAZ,CACA,GAAGjB,kBAAkBiB,KAArB,CAA4B,CAC1BA,MAAQ,UAAYjB,kBAAkBiB,KAA9B,CAAsC,YAAtC,CAAqDjB,kBAAkBiB,KAAvE,CAA+E,IACxF,CACD,MAAOA,MACR,CApEH,qFAwE2B,CACvB,KAAKC,gBAAL,CAAsB,CACpBR,IAAK,KAAKV,iBAAL,CAAuBU,GADR,CAEpBD,IAAK,KAAKT,iBAAL,CAAuBS,GAFR,CAAtB,CAID,CA7EH,wEAkFmBU,MAlFnB,CAkF2B,CACvB,KAAKC,IAAL,CAAU,4BAAV,CAAwCD,MAAxC,CACD,CApFH,2EAwFsB,CAClB,GAAG,KAAKnB,iBAAR,CAA2B,CACzB,KAAKqB,gBAAL,CAAwB,EAAxB,CACA,GAAG,KAAKhB,SAAR,CAAmB,CACjB,KAAKgB,gBAAL,CAAwB,aAAxB,CACA,GAAG,CAAC,KAAKrB,iBAAL,CAAuBC,IAA3B,CAAiC,CAC/B,KAAKoB,gBAAL,CAAwB,EACzB,CACF,CACF,CACF,CAlGH,YAoGD,CArGD","file":"px-title-button.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'px-title-button',\n\n    properties: {\n      /**\n       * Single action button to display on the title section right side.\n       * See https://github.com/PredixDev/px-buttons-design for more details.\n       */\n      titleActionButton: {\n        type: Object,\n        value: {},\n        observer: '_titleActionButtonChanged'\n      },\n      /**\n       * hovered to add additional class on elements when hovering\n       */\n      isOverlay: {\n        type: Boolean,\n        value: false,\n        observer: '_isOverlayChanged'\n      }\n    },\n    /**\n     * Observer when actionButton changes.\n     * Sets _hasTitleActionButton\n     */\n    _titleActionButtonChanged() {\n      this._hasTitleActionButton = (this.titleActionButton && (this.titleActionButton.key || this.titleActionButton.val)) !== undefined;\n      this._isOverlayChanged();\n    },\n    /**\n     * Return button class type and size if any\n     * See https://github.com/PredixDev/px-buttons-design for more details.\n     */\n    _getBtnClazz(titleActionButton) {\n      let clazz = titleActionButton.size || '';\n      clazz = clazz + ' ' + (titleActionButton.type || '');\n      return clazz;\n    },\n    /**\n     * Return style for color.  This property is part of px-button so honor if passed on.\n     */\n    _getBtnColor(titleActionButton) {\n      let color = '';\n      if(titleActionButton.color) {\n        color = 'color: ' + titleActionButton.color + '; stroke: ' + titleActionButton.color + '; ';\n      }\n      return color;\n    },\n    /**\n     * Return button class type and size if any\n     * See https://github.com/PredixDev/px-buttons-design for more details.\n     */\n    _getBtnClazz(titleActionButton) {\n      let clazz = titleActionButton.size || '';\n      clazz = clazz + ' ' + (titleActionButton.type || '');\n      return clazz;\n    },\n    /**\n     * Return style for color.  This property is part of px-button so honor if passed on.\n     */\n    _getBtnColor(titleActionButton) {\n      let color = '';\n      if(titleActionButton.color) {\n        color = 'color: ' + titleActionButton.color + '; stroke: ' + titleActionButton.color + '; ';\n      }\n      return color;\n    },\n    /**\n     * Callback for title icon\n     */\n    _onTitleActionSelected() {\n      this._handleSelection({\n        val: this.titleActionButton.val, \n        key: this.titleActionButton.key\n      });\n    },\n    /**\n     * Fires px-title-on-action-clicked with selection detail. E.g. {key: \"1\", val: \"Favorite\"}\n     * @event px-title-on-action-clicked\n     */\n    _handleSelection(detail) {\n      this.fire('px-title-on-action-clicked', detail);\n    },\n    /**\n     * Callback to set specific classes for overlay container\n     */\n    _isOverlayChanged() {\n      if(this.titleActionButton) {\n        this._btnHoveredclass = '';\n        if(this.isOverlay) {\n          this._btnHoveredclass = 'btn-overlay';\n          if(!this.titleActionButton.type) {\n            this._btnHoveredclass = '';\n          }\n        }\n      }\n    }\n  });\n})();\n"]}