{"version":3,"sources":["px-action-buttons.es6.js"],"names":["Polymer","is","properties","actionButtons","type","Object","value","observer","hoverTextColor","String","isOverlay","Boolean","isPrimary","created","_MAX_ITEMS","_MAX_PRIMARY_ITEMS","_primaryBtnsIndx","attached","listen","detached","unlisten","_actionButtonsChanged","_notifyActionChange","actionBtns","JSON","parse","stringify","maxButtons","maxPrimaryButtons","dropdownCount","x","items","length","id","_isDisplayDropdown","_isDisplayButtons","async","pxDropdown","$$","style","height","item","key","val","label","multi","selected","splice","sortMode","selectBy","set","dropdown","dom","root","querySelector","button","pxIcon","right","color","_onSelected","evt","detail","model","_handleSelection","_itemSelected","_displayValueSelected","fire","_getBtnClazz","index","clazzset","_getBtnSize","size","_getBtnType","buttonIcon","push","disabled","undefined","join","trim","array","_getBtnColor"],"mappings":"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","file":"px-action-buttons.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'px-action-buttons',\n\n    properties: {\n      /**\n       * Action buttons to display below the description/copy text.\n       * Please refer to px-dropdown (https://github.com/PredixDev/px-dropdown) for a list of supported properties\n       */\n      actionButtons: {\n        type: Object,\n        value: {},\n        observer: '_actionButtonsChanged'\n      },\n      /**\n       * Current text color of overlay to apply other elements when hovering\n       */\n      hoverTextColor: {\n        type: String,\n        value: ''\n      },\n      /**\n       * Boolean to find out if items list is in overlay\n       */\n      isOverlay: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Boolean to display primary button\n       */\n      isPrimary: {\n        type: Boolean,\n        value: false\n      }\n    },\n    created() {\n      this._MAX_ITEMS = 3;\n      this._MAX_PRIMARY_ITEMS = 1;\n      this._primaryBtnsIndx = [];\n    },\n    /**\n     * Attach event listeners for dropdown action buttons.\n     */\n    attached() {\n      this.listen(this, 'px-dropdown-selection-changed', '_itemSelected');\n    },\n    /**\n     * Detach event listeners for dropdown action buttons.\n     */\n    detached() {\n      this.unlisten(this, 'px-dropdown-selection-changed', '_itemSelected');\n    },\n    /**\n     * Observer when actionButtons changes.  \n     * Sets flag _isDisplayDropdown true if actionButtons size is greater than default items size 3, false otherwise.\n     * Sets flag _isDisplayButtons true if actionButtons size is less or equal than default items size 3, false otherwise.\n     * If _isDisplayDropdown === true it will update px-dropdown options menu\n     */\n    _actionButtonsChanged() {\n      // set _notifyActionChange false to prevent firing px-dropdown-selection-changed while updating the new set of buttons\n      this._notifyActionChange = false;\n      let actionBtns = JSON.parse(JSON.stringify(this.actionButtons));\n      actionBtns.maxButtons = actionBtns.maxButtons || this._MAX_ITEMS;\n      actionBtns.maxPrimaryButtons = actionBtns.maxPrimaryButtons || this._MAX_PRIMARY_ITEMS;\n      let dropdownCount = 0;\n      this._primaryBtnsIndx = [];\n      for(let x in actionBtns.items) {\n        if(actionBtns.items[x].isPrimary && this._primaryBtnsIndx.length < actionBtns.maxPrimaryButtons) {\n          //actionBtns.items[x].index = x;\n          this._primaryBtnsIndx[actionBtns.items[x].id] = x;\n        } else {\n          dropdownCount++;\n        }\n      }\n      this._isDisplayDropdown = dropdownCount > actionBtns.maxButtons;\n      \n      this._isDisplayButtons = false;\n      if(this.isPrimary) {\n        this._isDisplayButtons = true;\n        this._isDisplayDropdown = false;\n      } else if(this._isDisplayDropdown) {\n        this.async(function() {\n          let pxDropdown = this.$$('#pxDropdown');\n          pxDropdown.style.height = '20px';\n          for(let x in actionBtns.items) {\n            // px-dropdown has key and val\n            let item = actionBtns.items[x];\n            item.key = item.id || item.key;\n            item.val = item.label || item.val;\n            delete item.id;\n            delete item.label;\n            if(!actionBtns.multi) {\n              delete item.selected;\n            }\n          }\n          // remove items.isPrimary buttons from dropdown list\n          for(let x in this._primaryBtnsIndx) {\n            actionBtns.items.splice(this._primaryBtnsIndx[x], 1);\n          }\n          // there are only two options for sortMode and selectBy in px-dropdown\n          if(actionBtns.sortMode && actionBtns.sortMode === 'label') {\n            actionBtns.sortMode = 'val';\n          } else if(actionBtns.sortMode !== 'val') {\n            actionBtns.sortMode = 'key';\n          }\n          if(actionBtns.selectBy && actionBtns.selectBy === 'label') {\n            actionBtns.selectBy = 'val';\n          } else if(actionBtns.selectBy !== 'val') {\n            actionBtns.selectBy = 'key';\n          }\n          for(let id in actionBtns) {\n            pxDropdown.set(id, actionBtns[id]);\n          }\n          this.async(function() {\n            // adjust dropdown to appear aligned to the right\n            let dropdown = Polymer.dom(pxDropdown.root).querySelector('#dropdown');\n            dropdown.set('horizontalAlign', 'right');\n            let button = Polymer.dom(pxDropdown.root).querySelector('#button');\n            this.button = button;\n            this.pxIcon = Polymer.dom(button).querySelector('px-icon');\n            if(this.pxIcon) {\n              this.pxIcon.style.right = '-6px';\n              if(this.isOverlay) {\n                this.pxIcon.style.color = this.hoverTextColor;\n              }\n            }\n            this._notifyActionChange = true;\n          });\n        }, 100);\n      } else {\n        this._isDisplayButtons = true;\n      }\n      this._notifyActionChange = true;\n    },\n    /**\n     * Callback for on-tap event for action items when the list size is 3 or less\n     */\n    _onSelected(evt) {\n      let item = evt.detail.model || evt.model.item;\n      this._handleSelection({\n        label: item.label, \n        id: item.id\n      });\n    },\n    /**\n     * Callback for selected/unselected action title dropdown items when the list is greater than 3\n     */\n    _itemSelected(evt) {\n      let pxDropdown = this.$$('#pxDropdown');\n      if(this.actionButtons.multi || pxDropdown._displayValueSelected === evt.detail.val) {\n        this._handleSelection({\n          label: evt.detail.val, \n          id: evt.detail.key\n        });\n      }\n    },\n    /**\n     * Fires px-title-action with selection detail. E.g. {\"id\": \"1\", \"label\": \"Favorite\", \"selected\": true}\n     */\n    _handleSelection(detail) {\n      if(this._notifyActionChange) {\n        this.fire('px-tile-action-tapped', detail);\n      }\n    },\n    /**\n     * Return button class type and size if any\n     * See https://github.com/PredixDev/px-buttons-design for more details.\n     */\n    _getBtnClazz(item) {\n      // if index is undefinded then is allowed to show as primary button\n      var index = this._primaryBtnsIndx[item.id]; \n      let clazzset = this._getBtnSize(item.size);\n      clazzset = this._getBtnType(item.type, clazzset);\n      if(item.buttonIcon === true) {\n        clazzset.push('btn--icon');\n      }\n      if(item.disabled === true) {\n        clazzset.push('btn--disabled');\n      }\n      if( (this.isPrimary && !item.isPrimary) || \n          (!this.isPrimary && item.isPrimary)  || \n          (this.isPrimary && index === undefined) ) { \n        clazzset.push('hidden');\n      }\n      return clazzset.join(\" \").trim();\n    },\n    /**\n     * Returns button type class\n     */\n    _getBtnType(type, array) {\n      array = array || [];\n      if(type) {\n        switch(type.trim()) {\n          case 'primary':\n            array.push('btn--primary');\n            break;\n          case 'call to action':\n            array.push('btn--call-to-action');\n            break;\n          case 'tertiary':\n            array.push('btn--tertiary');\n            break;\n          case 'bare':\n            array.push('btn--bare');\n            if(this.isOverlay) {\n              array.push('btn-overlay');\n            }\n            break;\n          case 'bare primary':\n            array.push('btn--bare--primary');\n            if(this.isOverlay) {\n              array.push('btn-overlay');\n            } else {\n              array.push('btn-tile-bare-primary');\n            }\n            break;\n        }\n      }\n      return array;\n    },\n    /**\n     * Returns button size class\n     */\n    _getBtnSize(size, array) {\n      array = array || [];\n      if(size) {\n        switch(size.trim()) {\n          case 'small':\n            array.push('btn--small');\n            break;\n          case 'large':\n            array.push('btn--large');\n            break;\n          case 'huge':\n            array.push('btn--huge');\n            break;\n          case 'full':\n            array.push('btn--full');\n            break;\n        }\n      }\n      return array;\n    },\n    /**\n     * Return style for color.  This property is part of px-button so honor if passed on.\n     */\n    _getBtnColor(item) {\n      let color = '';\n      if(item.color) {\n        color = 'color: ' + item.color + '; stroke: ' + item.color + '; ';\n      }\n      return color;\n    }\n  });\n})();\n"]}