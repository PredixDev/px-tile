{"version":3,"sources":["px-action-buttons.es6.js"],"names":["Polymer","is","properties","actionButtons","type","Object","value","observer","hoverTextColor","String","isOverlay","Boolean","isPrimary","attached","listen","detached","unlisten","_actionButtonsChanged","_notifyActionChange","actionBtns","JSON","parse","stringify","maxButtons","maxPrimaryButtons","primaryBtns","btns","x","items","length","push","_isDisplayDropdown","_isDisplayButtons","_setupDropdownButtons","_items","async","pxDropdown","$$","style","height","item","key","id","val","label","multi","selected","sortMode","selectBy","set","dropdown","dom","root","querySelector","button","pxIcon","right","color","_onSelected","evt","detail","model","_handleSelection","_itemSelected","_displayValueSelected","fire","_getBtnClazz","clazzset","_getBtnSize","size","_getBtnType","buttonIcon","disabled","join","trim","array","_getBtnColor"],"mappings":"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","file":"px-action-buttons.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'px-action-buttons',\n\n    properties: {\n      /**\n       * Action buttons to display below the description/copy text.\n       * Please refer to px-dropdown (https://github.com/PredixDev/px-dropdown) for a list of supported properties\n       */\n      actionButtons: {\n        type: Object,\n        value: {},\n        observer: '_actionButtonsChanged'\n      },\n      /**\n       * Current text color of overlay to apply other elements when hovering\n       */\n      hoverTextColor: {\n        type: String,\n        value: ''\n      },\n      /**\n       * Boolean to find out if items list is in overlay\n       */\n      isOverlay: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Boolean to display primary button\n       */\n      isPrimary: {\n        type: Boolean,\n        value: false\n      }\n    },\n    /**\n     * Attach event listeners for dropdown action buttons.\n     */\n    attached() {\n      this.listen(this, 'px-dropdown-selection-changed', '_itemSelected');\n    },\n    /**\n     * Detach event listeners for dropdown action buttons.\n     */\n    detached() {\n      this.unlisten(this, 'px-dropdown-selection-changed', '_itemSelected');\n    },\n    /**\n     * Observer when actionButtons changes.  \n     * Sets flag _isDisplayDropdown true if actionButtons size is greater than default items size 3, false otherwise.\n     * Sets flag _isDisplayButtons true if actionButtons size is less or equal than default items size 3, false otherwise.\n     * If _isDisplayDropdown === true it will update px-dropdown options menu\n     */\n    _actionButtonsChanged() {\n      // set _notifyActionChange false to prevent firing px-dropdown-selection-changed while updating the new set of buttons\n      this._notifyActionChange = false;\n      let actionBtns = JSON.parse(JSON.stringify(this.actionButtons));\n      // set default max buttons if not passed in the JSON object\n      let maxButtons = actionBtns.maxButtons || 3;\n      // set default max primary buttons if not passed in the JSON object\n      let maxPrimaryButtons = actionBtns.maxPrimaryButtons || 1;\n      let primaryBtns = [];\n      let btns = [];\n      for(let x in actionBtns.items) {\n        if(actionBtns.items[x].isPrimary) {\n          if(primaryBtns.length < maxPrimaryButtons) {\n            // add primary button to array\n            primaryBtns.push(actionBtns.items[x]);\n          } else {\n            // just delete isPrimary to add to btns array\n            delete actionBtns.items[x].isPrimary;\n          }\n        }\n        if(!actionBtns.items[x].isPrimary) {\n          btns.push(actionBtns.items[x]);\n        }\n      }\n      if(this.isPrimary) {\n        actionBtns.items = primaryBtns;\n        this._isDisplayDropdown = false;\n      } else {\n        actionBtns.items = btns;\n        this._isDisplayDropdown = actionBtns.items.length > maxButtons;\n      }\n      this._isDisplayButtons = false;\n      if(this._isDisplayDropdown)  {\n        this._setupDropdownButtons(actionBtns);\n      } else {\n        this._items = actionBtns.items;\n        this._isDisplayButtons = true;\n      }\n      this._notifyActionChange = true;\n    },\n    /**\n     * Sets dropdown \n     */\n    _setupDropdownButtons(actionBtns){\n      this.async(function() {\n        let pxDropdown = this.$$('#pxDropdown');\n        pxDropdown.style.height = '20px';\n        for(let x in actionBtns.items) {\n          // px-dropdown has key and val\n          let item = actionBtns.items[x];\n          item.key = item.id || item.key;\n          item.val = item.label || item.val;\n          delete item.id;\n          delete item.label;\n          if(!actionBtns.multi) {\n            delete item.selected;\n          }\n        }\n        // there are only two options for sortMode and selectBy in px-dropdown\n        if(actionBtns.sortMode && actionBtns.sortMode === 'label') {\n          actionBtns.sortMode = 'val';\n        } else if(actionBtns.sortMode !== 'val') {\n          actionBtns.sortMode = 'key';\n        }\n        if(actionBtns.selectBy && actionBtns.selectBy === 'label') {\n          actionBtns.selectBy = 'val';\n        } else if(actionBtns.selectBy !== 'val') {\n          actionBtns.selectBy = 'key';\n        }\n        for(let id in actionBtns) {\n          pxDropdown.set(id, actionBtns[id]);\n        }\n        this.async(function() {\n          // adjust dropdown to appear aligned to the right\n          let dropdown = Polymer.dom(pxDropdown.root).querySelector('#dropdown');\n          dropdown.set('horizontalAlign', 'right');\n          let button = Polymer.dom(pxDropdown.root).querySelector('#button');\n          this.button = button;\n          this.pxIcon = Polymer.dom(button).querySelector('px-icon');\n          if(this.pxIcon) {\n            this.pxIcon.style.right = '-6px';\n            if(this.isOverlay) {\n              this.pxIcon.style.color = this.hoverTextColor;\n            }\n          }\n        });\n      }, 100);\n    },\n    /**\n     * Callback for on-tap event for action items when the list size is 3 or less\n     */\n    _onSelected(evt) {\n      let item = evt.detail.model || evt.model.item;\n      this._handleSelection({\n        label: item.label, \n        id: item.id\n      });\n    },\n    /**\n     * Callback for selected/unselected action title dropdown items when the list is greater than 3\n     */\n    _itemSelected(evt) {\n      let pxDropdown = this.$$('#pxDropdown');\n      if(this.actionButtons.multi || pxDropdown._displayValueSelected === evt.detail.val) {\n        this._handleSelection({\n          label: evt.detail.val, \n          id: evt.detail.key\n        });\n      }\n    },\n    /**\n     * Fires px-title-action with selection detail. E.g. {\"id\": \"1\", \"label\": \"Favorite\", \"selected\": true}\n     */\n    _handleSelection(detail) {\n      if(this._notifyActionChange) {\n        this.fire('px-tile-action-tapped', detail);\n      }\n    },\n    /**\n     * Return button class type and size if any\n     * See https://github.com/PredixDev/px-buttons-design for more details.\n     */\n    _getBtnClazz(item) {\n      let clazzset = this._getBtnSize(item.size);\n      clazzset = this._getBtnType(item.type, clazzset);\n      if(item.buttonIcon === true) {\n        clazzset.push('btn--icon');\n      }\n      if(item.disabled === true) {\n        clazzset.push('btn--disabled');\n      }\n      if( (this.isPrimary && !item.isPrimary)  || \n          (!this.isPrimary && item.isPrimary) ) { \n        clazzset.push('hidden');\n      }\n      return clazzset.join(\" \").trim();\n    },\n    /**\n     * Returns button type class\n     */\n    _getBtnType(type, array) {\n      array = array || [];\n      if(type) {\n        switch(type.trim()) {\n          case 'primary':\n            array.push('btn--primary');\n            break;\n          case 'call to action':\n            array.push('btn--call-to-action');\n            break;\n          case 'tertiary':\n            array.push('btn--tertiary');\n            break;\n          case 'bare':\n            array.push('btn--bare');\n            if(this.isOverlay) {\n              array.push('btn-overlay');\n            }\n            break;\n          case 'bare primary':\n            array.push('btn--bare--primary');\n            if(this.isOverlay) {\n              array.push('btn-overlay');\n            } else {\n              array.push('btn-tile-bare-primary');\n            }\n            break;\n        }\n      }\n      return array;\n    },\n    /**\n     * Returns button size class\n     */\n    _getBtnSize(size, array) {\n      array = array || [];\n      if(size) {\n        switch(size.trim()) {\n          case 'small':\n            array.push('btn--small');\n            break;\n          case 'large':\n            array.push('btn--large');\n            break;\n          case 'huge':\n            array.push('btn--huge');\n            break;\n          case 'full':\n            array.push('btn--full');\n            break;\n        }\n      }\n      return array;\n    },\n    /**\n     * Return style for color.  This property is part of px-button so honor if passed on.\n     */\n    _getBtnColor(item) {\n      let color = '';\n      if(item.color) {\n        color = 'color: ' + item.color + '; stroke: ' + item.color + '; ';\n      }\n      return color;\n    }\n  });\n})();\n"]}