{"version":3,"sources":["px-tile.es6.js"],"names":["Polymer","is","properties","hoverable","type","Boolean","value","observer","_hovered","title","String","subtitle","description","overlayDescription","titleActionButton","Object","actionButtons","_hover","_hoverableChanged","$","overlay","classList","add","remove","_hoverTextColor","window","getComputedStyle","color","attached","listen","detached","unlisten","_getClass","hovered","_actionButtonsChanged","_hasActionButtons","items","undefined","length","_hasData","titleActionButtonKey","_hasTitleSubtitleAndActionBtn","trim","_hasTitleAndActionBtn"],"mappings":"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","file":"px-tile.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'px-tile',\n\n    properties: {\n      /**\n       * If true, hovering over the card will cause an overlay to appear\n       * with more detailed information, including the description\n       * and an optional slot for showing a footer at the bottom.\n       */\n      hoverable: {\n        type: Boolean,\n        value: false,\n        observer: '_hoverableChanged'\n      },\n      /**\n       * Whether the tile is currently being hovered.\n       */\n      _hovered: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Main text label for the tile.\n       */\n      title: {\n        type: String,\n        value: 'Title'\n      },\n      /**\n       * Subtitle text for the tile.\n       */\n      subtitle: {\n        type: String,\n        value: 'Subtitle text'\n      },\n       /**\n        * Description information to be displayed underneath tile and subtitle.\n        * Default : Only the first ~3 lines of text will be displayed, after which it will be truncated.\n        * You can customize this using by adjusting `--px-tile-desc-text-height` SASS variable. (e.g. 1 line = 1 rem,\n        * to set to 5 lines truncated, set --px-tile-desc-text-height : 5rem)\n       */\n      description: {\n        type: String,\n        value: 'Description'\n      },\n      /**\n       * Description information to be displayed in the overlay of a hoverable card.\n       * It has more space to display text content and can be adjusted along side with\n       * total height of the tile\n       */\n      overlayDescription: {\n        type: String,\n        value: 'Overlay description'\n      },\n      /**\n       * Single action button to display on the title section right side. \n       * \n       * See ` px-buttons-design ` https://www.predix-ui.com/#/css/visual/buttons/px-buttons-design for more details\n       * \n       * `style` is an additionally property from px-tile (E.g. background-color: red; margin-left: 4px; others..) \n       * \n       * Examples:\n       * \n       * Default button with icon and color ` {\"key\":\"101\",\"val\":\"Favorite\",\"icon\":\"px-nav:favorite\", \"color\": \"orange\"} ` \n       * \n       * Default button and icon ` {\"key\":\"101\",\"val\":\"Favorite\",\"icon\":\"px-nav:favorite\"} ` \n       * \n       * Small button and icon ` {\"key\":\"101\",\"val\":\"Favorite\",\"size\":\"btn--small\",\"icon\":\"px-nav:favorite\"} ` \n       * \n       * Bare small button with icon and text `  {\"key\":\"101\",\"val\":\"Favorite\",\"size\":\"btn--small\",\"type\":\"btn--bare\",\"icon\":\"px-nav:favorite\"} `  \n       * \n       * Bare small button with just text  ` {\"key\":\"101\",\"val\":\"Favorite\",\"size\":\"btn--small\",\"type\":\"btn--bare\"} `   \n       * \n       * Bare small button with just icon and some margin on the right `  {\"key\":\"101\",\"size\":\"btn--small\",\"type\":\"btn--icon\",\"icon\":\"px-nav:favorite\", \"style\": \"margin-right: 5px;\"} `\n       * \n       * Bare small button with just icon `  {\"key\":\"101\",\"size\":\"btn--small\",\"type\":\"btn--icon\",\"icon\":\"px-nav:favorite\"} ` \n       */\n      titleActionButton: {\n        type: Object,\n        value: {}\n      },\n      /**\n       * Action buttons display below description.\n       * \n       * When items <= 3 will display the buttons/text inline.\n       * \n       * Please refer to ` px-buttons-design ` (https://www.predix-ui.com/#/css/visual/buttons/px-buttons-design) for more details\n       * \n       * When items > 3 will display the list of elements in a dropdown.\n       * \n       * Please refer to ` px-dropdown ` (https://www.predix-ui.com/#/elements/px-dropdown) for more details\n       * \n       *  `style` is an additionally property from px-tile (E.g. background-color: red; margin-left: 4px; others..). See example \"Buttons with text only\" below\n       * \n       * Some examples when items <= 3:\n       * \n       * Only icons:  ` {\"items\":[{\"key\":\"1\",\"size\":\"btn--small\",\"type\":\"btn--bare btn--icon\",\"icon\":\"px-utl:link\"},{\"key\":\"2\",\"size\":\"btn--small\",\"type\":\"btn--bare btn--icon\",\"icon\":\"px-utl:copy\"},{\"key\":\"3\",\"size\":\"btn--small\",\"type\":\"btn--bare btn--icon\",\"icon\":\"px-utl:download\"}]} ` \n       * \n       * Small buttons:  ` {\"items\":[{\"key\":\"1\",\"val\":\"Link\",\"size\":\"btn--small\"},{\"key\":\"2\",\"val\":\"Copy\",\"size\":\"btn--small\"},{\"key\":\"3\",\"val\":\"Download\",\"size\":\"btn--small\"}]} ` \n       * \n       * Small buttons with icons:  ` {\"items\":[{\"key\":\"1\",\"val\":\"Link\",\"size\":\"btn--small\",\"icon\":\"px-utl:link\"},{\"key\":\"2\",\"val\":\"Copy\",\"size\":\"btn--small\",\"icon\":\"px-utl:copy\"},{\"key\":\"3\",\"val\":\"Download\",\"size\":\"btn--small\",\"icon\":\"px-utl:download\"}]} ` \n       * \n       * Buttons with text only:  ` {\"items\":[{\"key\":\"1\",\"val\":\"Link\",\"size\":\"btn--small\",\"type\":\"btn--bare--primary\", \"style\":\"margin-right: -15px;\"},{\"key\":\"2\",\"val\":\"Copy\",\"size\":\"btn--small\",\"type\":\"btn--bare--primary\"},{\"key\":\"3\",\"val\":\"Download\",\"size\":\"btn--small\",\"type\":\"btn--bare--primary\"}]} ` \n       * \n       * \n       * \n       * Example when items > 3:  \n       * \n       * ` {\"items\":[{\"key\":\"1\",\"val\":\"Edit\",\"icon\":\"px-utl:edit\",\"selected\":true},{\"key\":\"2\",\"val\":\"Copy\",\"icon\":\"px-utl:copy\"},{\"key\":\"3\",\"val\":\"Remove\",\"icon\":\"px-vis:trash-series\"},{\"key\":\"4\",\"val\":\"Notification\",\"icon\":\"px-nav:notification\"}],\"sortMode\":\"key\",\"buttonStyle\":\"icon\",\"icon\":\"px-nav:more\",\"displayValue\":\"Select\",\"disabled\":false,\"disableClear\":false,\"hideChevron\":true,\"multi\":false,\"searchMode\":false} ` \n       * \n       * Event fired on item selection:\n       * \n       * `px-title-on-action-clicked`\n       * \n       */\n      actionButtons: {\n        type: Object,\n        value: {},\n        observer: '_actionButtonsChanged'\n      }\n    },\n    /**\n     * Method used internally for flipping the hovered status of a tile.\n     */\n    _hover() {\n      if(this.hoverable) {\n        this._hovered = !this._hovered;\n      }\n    },\n    /**\n     * On change callback to remove overlay\n     */\n    _hoverableChanged() {\n      this.$.overlay.classList.add('overlay-remove');\n      if(this.hoverable) {\n        this.$.overlay.classList.remove('overlay-remove');\n        // extract overlay text color to pass to other components\n        this._hoverTextColor = window.getComputedStyle(this.$.overlay).color;\n      }\n    },\n    /**\n     * Attach event listeners for hoverable tiles.\n     */\n    attached() {\n      this.listen(this.$.overlay, 'mouseenter', '_hover');\n      this.listen(this.$.overlay, 'mouseleave', '_hover');\n    },\n    /**\n     * Detach event listeners for hoverable tiles.\n     */\n    detached() {\n      this.unlisten(this.$.overlay, 'mouseenter');\n      this.unlisten(this.$.overlay, 'mouseleave');\n    },\n    /**\n     * Returns class to control overlay for hoverable tiles.\n     */\n    _getClass(hovered) {\n      return hovered ? 'hovered' : '';\n    },\n    /**\n     * On change callback for actionButtons\n     */\n    _actionButtonsChanged() {\n      this._hasActionButtons = this.actionButtons &&  this.actionButtons.items !== undefined &&  this.actionButtons.items.length > 0;\n    },\n    /**\n     * Returns true if either title, subtitle, titleActionButtonKey, or actionButtons exist\n     */\n    _hasData(title, subtitle, titleActionButtonKey, actionButtons) {\n      return (actionButtons && actionButtons.items && actionButtons.items.length > 0) || \n        this._hasTitleSubtitleAndActionBtn(title, subtitle, titleActionButtonKey);\n    },\n    /**\n     * Returns true if either title, subtitle, or titleActionButtonKey exist\n     */\n    _hasTitleSubtitleAndActionBtn(title, subtitle, titleActionButtonKey) {\n      subtitle = subtitle || '';\n      if(title || subtitle || titleActionButtonKey) {\n        return subtitle.trim().length > 0 || this._hasTitleAndActionBtn(title, titleActionButtonKey);\n      }\n      return false;\n    },\n    /**\n     * returns if either title or titleActionButtonKey exist\n     */\n    _hasTitleAndActionBtn(title, titleActionButtonKey) {\n      title = title || '';\n      if(title || titleActionButtonKey) {\n        return title.trim().length > 0 || titleActionButtonKey !== undefined;\n      }\n      return false;\n    }\n    /**\n     * @event px-title-on-action-clicked  \n     * \n     * Event ` px-title-on-action-clicked ` is fired when an item is selected from either titleActionButton or actionButtons with selection detail. E.g. {key: \"1\", val: \"Favorite\"}\n     * \n     * Example:\n     *  \n     * ` window.addEventListener('px-title-on-action-clicked', function(evt){ ` \n     * \n     * `    console.log(evt.detail); ` \n\n     * ` }); `\n     */\n  });\n})();\n"]}