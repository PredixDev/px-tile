{"version":3,"sources":["px-tile.es6.js"],"names":["Polymer","is","properties","hoverable","type","Boolean","value","_hovered","title","String","description","_hover","attached","listen","$","overlay","detached","unlisten","_getClass","hovered"],"mappings":"aAAA,CAAC,UAAW,CACVA,QAAQ,CAENC,GAAI,SAFE,CAINC,WAAY,CACV;;;;SAKAC,UAAW,CACTC,KAAMC,OADG,CAETC,MAAO,KAFE,CAND,CAUV;;SAGAC,SAAU,CACRH,KAAMC,OADE,CAERC,MAAO,KAFC,CAbA,CAiBV;;SAGAE,MAAO,CACLJ,KAAMK,MADD,CAELH,MAAO,OAFF,CApBG,CAwBV;;;SAIAI,YAAa,CACXN,KAAMK,MADK,CAEXH,MAAO,aAFI,CA5BH,CAJN,CAqCN;;OAGAK,MAxCM,kBAwCG,CACP,GAAG,KAAKR,SAAR,CAAmB,CACjB,KAAKI,QAAL,CAAgB,CAAC,KAAKA,QACvB,CACF,CA5CK,CA6CN;;OAGAK,QAhDM,oBAgDK,CACT,KAAKC,MAAL,CAAY,KAAKC,CAAL,CAAOC,OAAnB,CAA4B,YAA5B,CAA0C,QAA1C,EACA,KAAKF,MAAL,CAAY,KAAKC,CAAL,CAAOC,OAAnB,CAA4B,YAA5B,CAA0C,QAA1C,CACD,CAnDK,CAoDN;;OAGAC,QAvDM,oBAuDK,CACT,KAAKC,QAAL,CAAc,KAAKH,CAAL,CAAOC,OAArB,CAA8B,YAA9B,EACA,KAAKE,QAAL,CAAc,KAAKH,CAAL,CAAOC,OAArB,CAA8B,YAA9B,CACD,CA1DK,CA2DN;;OAGAG,SA9DM,oBA8DIC,OA9DJ,CA8Da,CACjB,MAAOA,SAAU,SAAV,CAAsB,EAC9B,CAhEK,CAAR,CAkED,CAnED","file":"px-tile.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'px-tile',\n\n    properties: {\n      /**\n       * If true, hovering over the card will cause an overlay to appear\n       * with more detailed information, including the description\n       * and an optional slot for showing a footer at the bottom.\n       */\n      hoverable: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Whether the tile is currently being hovered.\n       */\n      _hovered: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Main text label for the tile.\n       */\n      title: {\n        type: String,\n        value: 'Title'\n      },\n      /**\n       * Additional information to be displayed in the overlay of a hoverable card.\n       * Only the first ~6 lines of text will be displayed, after which it will be truncated.\n       */\n      description: {\n        type: String,\n        value: 'Description'\n      }\n    },\n    /**\n     * Method used internally for flipping the hovered status of a tile.\n     */\n    _hover() {\n      if(this.hoverable) {\n        this._hovered = !this._hovered;\n      }\n    },\n    /**\n     * Attach event listeners for hoverable tiles.\n     */\n    attached() {\n      this.listen(this.$.overlay, 'mouseenter', '_hover');\n      this.listen(this.$.overlay, 'mouseleave', '_hover');\n    },\n    /**\n     * Detach event listeners for hoverable tiles.\n     */\n    detached() {\n      this.unlisten(this.$.overlay, 'mouseenter');\n      this.unlisten(this.$.overlay, 'mouseleave');\n    },\n    /**\n     * Returns class to control overlay for hoverable tiles.\n     */\n    _getClass(hovered) {\n      return hovered ? 'hovered' : '';\n    }\n  });\n})();\n"]}