{"version":3,"sources":["px-tile.es6.js"],"names":["Polymer","is","properties","hoverable","type","Boolean","value","observer","_hovered","title","String","subtitle","description","overlayDescription","actionButtons","Object","_hover","_hoverableChanged","$","overlay","classList","add","remove","_hoverTextColor","window","getComputedStyle","color","attached","listen","detached","unlisten","_getClass","hovered","_onDataChanged","actionBtnsCount","x","items","isPrimary","_hasPrimaryBtn","_hasActionButtons","_hasTitleActionBtn","length","_hasTitleSubtitleActionBtn","_hasData"],"mappings":"aAAA,CAAC,UAAW,CACVA,QAAQ,CAENC,GAAI,SAFE,CAINC,WAAY,CACV;;;;SAKAC,UAAW,CACTC,KAAMC,OADG,CAETC,MAAO,KAFE,CAGTC,SAAU,mBAHD,CAND,CAWV;;SAGAC,SAAU,CACRJ,KAAMC,OADE,CAERC,MAAO,KAFC,CAdA,CAkBV;;SAGAG,MAAO,CACLL,KAAMM,MADD,CAELJ,MAAO,EAFF,CAGLC,SAAU,gBAHL,CArBG,CA0BV;;SAGAI,SAAU,CACRP,KAAMM,MADE,CAERJ,MAAO,EAFC,CAGRC,SAAU,gBAHF,CA7BA,CAkCT;;;;;SAMDK,YAAa,CACXR,KAAMM,MADK,CAEXJ,MAAO,EAFI,CAGXC,SAAU,gBAHC,CAxCH,CA6CV;;;;SAKAM,mBAAoB,CAClBT,KAAMM,MADY,CAElBJ,MAAO,EAFW,CAGlBC,SAAU,gBAHQ,CAlDV,CAuDV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAkCAO,cAAe,CACbV,KAAMW,MADO,CAEbT,MAAO,EAFM,CAGbC,SAAU,gBAHG,CAzFL,CAJN,CAmGN;;OAGAS,MAtGM,kBAsGG,CACP,GAAG,KAAKb,SAAR,CAAmB,CACjB,KAAKK,QAAL,CAAgB,CAAC,KAAKA,QACvB,CACF,CA1GK,CA2GN;;OAGAS,iBA9GM,6BA8Gc,CAClB,KAAKC,CAAL,CAAOC,OAAP,CAAeC,SAAf,CAAyBC,GAAzB,CAA6B,gBAA7B,EACA,GAAG,KAAKlB,SAAR,CAAmB,CACjB,KAAKe,CAAL,CAAOC,OAAP,CAAeC,SAAf,CAAyBE,MAAzB,CAAgC,gBAAhC,EACA;AACA,KAAKC,eAAL,CAAuBC,OAAOC,gBAAP,CAAwB,KAAKP,CAAL,CAAOC,OAA/B,EAAwCO,KAChE,CACF,CArHK,CAsHN;;OAGAC,QAzHM,oBAyHK,CACT,KAAKC,MAAL,CAAY,KAAKV,CAAL,CAAOC,OAAnB,CAA4B,YAA5B,CAA0C,QAA1C,EACA,KAAKS,MAAL,CAAY,KAAKV,CAAL,CAAOC,OAAnB,CAA4B,YAA5B,CAA0C,QAA1C,CACD,CA5HK,CA6HN;;OAGAU,QAhIM,oBAgIK,CACT,KAAKC,QAAL,CAAc,KAAKZ,CAAL,CAAOC,OAArB,CAA8B,YAA9B,EACA,KAAKW,QAAL,CAAc,KAAKZ,CAAL,CAAOC,OAArB,CAA8B,YAA9B,CACD,CAnIK,CAoIN;;OAGAY,SAvIM,oBAuIIC,OAvIJ,CAuIa,CACjB,MAAOA,SAAU,SAAV,CAAsB,EAC9B,CAzIK,CA0IN;;OAGAC,cA7IM,0BA6IW,CACf,GAAIC,iBAAkB,CAAtB,CACA,GAAG,KAAKpB,aAAR,CAAuB,CACrB,IAAI,GAAIqB,EAAR,GAAa,MAAKrB,aAAL,CAAmBsB,KAAhC,CAAuC,CACrC,GAAG,KAAKtB,aAAL,CAAmBsB,KAAnB,CAAyBD,CAAzB,EAA4BE,SAA/B,CAA0C,CACxC,KAAKC,cAAL,CAAsB,IACvB,CAFD,IAEO,CACLJ,iBACD,CACF,CACF,CACD,KAAKK,iBAAL,CAAyBL,gBAAkB,CAA3C,CACA,KAAKM,kBAAL,CAA0B,KAAK/B,KAAL,EAAc,KAAKA,KAAL,CAAWgC,MAAX,CAAoB,CAAlC,EAAsC,KAAKH,cAArE,CACA,KAAKI,0BAAL,CAAkC,KAAK/B,QAAL,EAAiB,KAAKA,QAAL,CAAc8B,MAAd,CAAuB,CAAxC,EAA6C,KAAKD,kBAApF,CACA,KAAKG,QAAL,CAAgB,KAAKJ,iBAAL,EAA0B,KAAKG,0BAChD,CACD;;;;;;;;;;;;OA7JM,CAAR,CA2KD,CA5KD","file":"px-tile.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'px-tile',\n\n    properties: {\n      /**\n       * If true, hovering over the card will cause an overlay to appear\n       * with more detailed information, including the description\n       * and an optional slot for showing a footer at the bottom.\n       */\n      hoverable: {\n        type: Boolean,\n        value: false,\n        observer: '_hoverableChanged'\n      },\n      /**\n       * Whether the tile is currently being hovered.\n       */\n      _hovered: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Main text label for the tile.\n       */\n      title: {\n        type: String,\n        value: '',\n        observer: '_onDataChanged'\n      },\n      /**\n       * Subtitle text for the tile.\n       */\n      subtitle: {\n        type: String,\n        value: '',\n        observer: '_onDataChanged'\n      },\n       /**\n        * Description information to be displayed underneath tile and subtitle.\n        * Default : Only the first ~3 lines of text will be displayed, after which it will be truncated.\n        * You can customize this using by adjusting `--px-tile-desc-text-height` SASS variable. (e.g. 1 line = 1 rem,\n        * to set to 5 lines truncated, set --px-tile-desc-text-height : 5rem)\n       */\n      description: {\n        type: String,\n        value: '',\n        observer: '_onDataChanged'\n      },\n      /**\n       * Description information to be displayed in the overlay of a hoverable card.\n       * It has more space to display text content and can be adjusted along with\n       * total height of the tile.\n       */\n      overlayDescription: {\n        type: String,\n        value: '',\n        observer: '_onDataChanged'\n      },\n      /**\n       * Action buttons display below description.\n       * \n       * When items <= 3 will display the buttons/text inline.\n       * \n       * Please refer to ` px-buttons-design ` (https://www.predix-ui.com/#/css/visual/buttons/px-buttons-design) for more details\n       * \n       * When items > 3 will display the list of elements in a dropdown.\n       * \n       * Please refer to ` px-dropdown ` (https://www.predix-ui.com/#/elements/px-dropdown) for more details\n       * \n       *  `style` is an additionally property from px-tile (E.g. background-color: red; margin-left: 4px; others..). See example \"Buttons with text only\" below\n       * \n       * Some examples when items <= 3:\n       * \n       * Only icons:  ` {\"items\":[{\"id\":\"1\",\"size\":\"small\",\"type\":\"bare\",\"buttonIcon\":true,\"icon\":\"px-utl:link\"},{\"id\":\"2\",\"size\":\"small\",\"type\":\"bare\",\"buttonIcon\":true,\"icon\":\"px-utl:copy\"},{\"id\":\"3\",\"size\":\"small\",\"type\":\"bare\",\"buttonIcon\":true,\"icon\":\"px-utl:download\"}]} ` \n       * \n       * Small buttons:  ` {\"items\":[{\"id\":\"1\",\"label\":\"Link\",\"size\":\"small\"},{\"id\":\"2\",\"label\":\"Copy\",\"size\":\"small\"},{\"id\":\"3\",\"label\":\"Download\",\"size\":\"small\"}]} ` \n       * \n       * Small buttons with icons:  ` {\"items\":[{\"id\":\"1\",\"label\":\"Link\",\"size\":\"small\",\"icon\":\"px-utl:link\"},{\"id\":\"2\",\"label\":\"Copy\",\"size\":\"small\",\"icon\":\"px-utl:copy\"},{\"id\":\"3\",\"label\":\"Download\",\"size\":\"small\",\"icon\":\"px-utl:download\"}]} ` \n       * \n       * Buttons with text only:  ` {\"items\":[{\"id\":\"1\",\"label\":\"Link\",\"size\":\"small\",\"type\":\"bare--primary\", \"style\":\"margin-right: -15px;\"},{\"id\":\"2\",\"label\":\"Copy\",\"size\":\"small\",\"type\":\"bare--primary\"},{\"id\":\"3\",\"label\":\"Download\",\"size\":\"small\",\"type\":\"bare--primary\"}]} ` \n       * \n       * \n       * \n       * Example when items > 3:  \n       * \n       * ` {\"items\":[{\"id\":\"1\",\"label\":\"Edit\",\"icon\":\"px-utl:edit\",\"selected\":true},{\"id\":\"2\",\"label\":\"Copy\",\"icon\":\"px-utl:copy\"},{\"id\":\"3\",\"label\":\"Remove\",\"icon\":\"px-vis:trash-series\"},{\"id\":\"4\",\"label\":\"Notification\",\"icon\":\"px-nav:notification\"}],\"sortMode\":\"id\",\"buttonStyle\":\"icon\",\"icon\":\"px-nav:more\",\"displayValue\":\"Select\",\"disabled\":false,\"disableClear\":false,\"hideChevron\":true,\"multi\":false,\"searchMode\":false} ` \n       * \n       * Event fired on item selection:\n       * \n       * `px-tile-action-tapped`\n       * \n       */\n      actionButtons: {\n        type: Object,\n        value: {},\n        observer: '_onDataChanged'\n      }\n    },\n    /**\n     * Method used internally for flipping the hovered status of a tile.\n     */\n    _hover() {\n      if(this.hoverable) {\n        this._hovered = !this._hovered;\n      }\n    },\n    /**\n     * On change callback to remove overlay\n     */\n    _hoverableChanged() {\n      this.$.overlay.classList.add('overlay-remove');\n      if(this.hoverable) {\n        this.$.overlay.classList.remove('overlay-remove');\n        // extract overlay text color to pass to other components\n        this._hoverTextColor = window.getComputedStyle(this.$.overlay).color;\n      }\n    },\n    /**\n     * Attach event listeners for hoverable tiles.\n     */\n    attached() {\n      this.listen(this.$.overlay, 'mouseenter', '_hover');\n      this.listen(this.$.overlay, 'mouseleave', '_hover');\n    },\n    /**\n     * Detach event listeners for hoverable tiles.\n     */\n    detached() {\n      this.unlisten(this.$.overlay, 'mouseenter');\n      this.unlisten(this.$.overlay, 'mouseleave');\n    },\n    /**\n     * Returns class to control overlay for hoverable tiles.\n     */\n    _getClass(hovered) {\n      return hovered ? 'hovered' : '';\n    },\n    /**\n     * On change callback for either property to set flags to either show/hide elements on px-tile\n     */\n    _onDataChanged() {\n      let actionBtnsCount = 0;\n      if(this.actionButtons) {\n        for(let x in this.actionButtons.items) {\n          if(this.actionButtons.items[x].isPrimary) {\n            this._hasPrimaryBtn = true;\n          } else {\n            actionBtnsCount++;\n          }\n        }\n      }\n      this._hasActionButtons = actionBtnsCount > 0;\n      this._hasTitleActionBtn = this.title && this.title.length > 0|| this._hasPrimaryBtn;\n      this._hasTitleSubtitleActionBtn = this.subtitle && this.subtitle.length > 0 || this._hasTitleActionBtn;\n      this._hasData = this._hasActionButtons || this._hasTitleSubtitleActionBtn;\n    }\n    /**\n     * @event px-tile-action-tapped  \n     * \n     * Event ` px-tile-action-tapped ` is fired when an item is selected from actionButtons.items with selection detail. E.g. {\"id\": \"1\", \"label\": \"Favorite\"}\n     * \n     * Example:\n     *  \n     * ` window.addEventListener('px-tile-action-tapped', function(evt){ ` \n     * \n     * `    console.log(evt.detail); ` \n\n     * ` }); `\n     */\n  });\n})();\n"]}