{"version":3,"sources":["px-tile.es6.js"],"names":["Polymer","is","properties","hoverable","type","Boolean","value","observer","_hovered","title","String","subtitle","description","overlayDescription","titleActionButton","Object","actionButtons","_hover","_hoverableChanged","$","overlay","classList","add","remove","attached","listen","detached","unlisten","_getClass","hovered","_actionButtonsChanged","items","length","_hasActionButtons"],"mappings":"aAAA,CAAC,UAAW,CACVA,QAAQ,CAENC,GAAI,SAFE,CAINC,WAAY,CACV;;;;SAKAC,UAAW,CACTC,KAAMC,OADG,CAETC,MAAO,KAFE,CAGTC,SAAU,mBAHD,CAND,CAWV;;SAGAC,SAAU,CACRJ,KAAMC,OADE,CAERC,MAAO,KAFC,CAdA,CAkBV;;SAGAG,MAAO,CACLL,KAAMM,MADD,CAELJ,MAAO,OAFF,CArBG,CAyBV;;SAGAK,SAAU,CACRP,KAAMM,MADE,CAERJ,MAAO,eAFC,CA5BA,CAgCT;;;;;SAMDM,YAAa,CACXR,KAAMM,MADK,CAEXJ,MAAO,aAFI,CAtCH,CA0CV;;;;SAKAO,mBAAoB,CAClBT,KAAMM,MADY,CAElBJ,MAAO,qBAFW,CA/CV,CAmDV;;;SAIAQ,kBAAmB,CACjBV,KAAMW,MADW,CAEjBT,MAAO,EAFU,CAvDT,CA2DV;;;;;;;;;;;;;;;;;;;;;;SAuBAU,cAAe,CACbZ,KAAMW,MADO,CAEbT,MAAO,EAFM,CAGbC,SAAU,uBAHG,CAlFL,CAJN,CA4FN;;OAGAU,MA/FM,kBA+FG,CACP,GAAG,KAAKd,SAAR,CAAmB,CACjB,KAAKK,QAAL,CAAgB,CAAC,KAAKA,QACvB,CACF,CAnGK,CAoGN;;OAGAU,iBAvGM,6BAuGc,CAClB,KAAKC,CAAL,CAAOC,OAAP,CAAeC,SAAf,CAAyBC,GAAzB,CAA6B,gBAA7B,EACA,GAAG,KAAKnB,SAAR,CAAmB,CACjB,KAAKgB,CAAL,CAAOC,OAAP,CAAeC,SAAf,CAAyBE,MAAzB,CAAgC,gBAAhC,CACD,CACF,CA5GK,CA6GN;;OAGAC,QAhHM,oBAgHK,CACT,KAAKC,MAAL,CAAY,KAAKN,CAAL,CAAOC,OAAnB,CAA4B,YAA5B,CAA0C,QAA1C,EACA,KAAKK,MAAL,CAAY,KAAKN,CAAL,CAAOC,OAAnB,CAA4B,YAA5B,CAA0C,QAA1C,CACD,CAnHK,CAoHN;;OAGAM,QAvHM,oBAuHK,CACT,KAAKC,QAAL,CAAc,KAAKR,CAAL,CAAOC,OAArB,CAA8B,YAA9B,EACA,KAAKO,QAAL,CAAc,KAAKR,CAAL,CAAOC,OAArB,CAA8B,YAA9B,CACD,CA1HK,CA2HN;;OAGAQ,SA9HM,oBA8HIC,OA9HJ,CA8Ha,CACjB,MAAOA,SAAU,SAAV,CAAsB,EAC9B,CAhIK,CAiINC,qBAjIM,iCAiIkB,CACtB,GAAG,KAAKd,aAAL,CAAmBe,KAAnB,EAA4B,KAAKf,aAAL,CAAmBe,KAAnB,CAAyBC,MAAxD,CAAgE,CAC9D,KAAKC,iBAAL,CAAyB,IAAzB,CACA;AACA;AACD,CAJD,IAIO,CACL;AACA,KAAKA,iBAAL,CAAyB,KAAzB,CACA;AACD,CACF,CACD;;;OA5IM,CAAR,CAiJD,CAlJD","file":"px-tile.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'px-tile',\n\n    properties: {\n      /**\n       * If true, hovering over the card will cause an overlay to appear\n       * with more detailed information, including the description\n       * and an optional slot for showing a footer at the bottom.\n       */\n      hoverable: {\n        type: Boolean,\n        value: false,\n        observer: '_hoverableChanged'\n      },\n      /**\n       * Whether the tile is currently being hovered.\n       */\n      _hovered: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Main text label for the tile.\n       */\n      title: {\n        type: String,\n        value: 'Title'\n      },\n      /**\n       * Subtitle text for the tile.\n       */\n      subtitle: {\n        type: String,\n        value: 'Subtitle text'\n      },\n       /**\n        * Description information to be displayed underneath tile and subtitle.\n        * Default : Only the first ~3 lines of text will be displayed, after which it will be truncated.\n        * You can customize this using by adjusting `--px-tile-desc-text-height` SASS variable. (e.g. 1 line = 1 rem,\n        * to set to 5 lines truncated, set --px-tile-desc-text-height : 5rem)\n       */\n      description: {\n        type: String,\n        value: 'Description'\n      },\n      /**\n       * Description information to be displayed in the overlay of a hoverable card.\n       * It has more space to display text content and can be adjusted along side with\n       * total height of the tile\n       */\n      overlayDescription: {\n        type: String,\n        value: 'Overlay description'\n      },\n      /**\n       * Single action button to display on the title section right side. \n       * See https://github.com/PredixDev/px-buttons-design \n       */\n      titleActionButton: {\n        type: Object,\n        value: {}\n      },\n      /**\n       * Action buttons to display below the description text.\n       * \n       * If items <= 3 it will display the buttons/text inline.\n       * \n       * Please refer to px-buttons-design (https://github.com/PredixDev/px-buttons-design) for a list of supported properties\n       * \n       * If items > 3 it will display the list of elements in a dropdown.\n       * \n       * Please refer to px-dropdown (https://github.com/PredixDev/px-dropdown) for a list of supported properties\n       * \n       * Example when items = 3:\n       * \n       * {\"items\":[{\"key\":\"1\",\"type\":\"btn--bare btn--icon\",\"icon\":\"px-utl:phone\"},{\"key\":\"2\",\"type\":\"btn--bare btn--icon\",\"icon\":\"px-utl:copy\"},{\"key\":\"3\",\"type\":\"btn--bare btn--icon\",\"icon\":\"px-utl:edit\"}]}\n       * \n       * Example when items > 3:\n       * \n       * {\"items\":[{\"key\":\"1\",\"val\":\"Edit\",\"icon\":\"px-utl:edit\",\"selected\":true},{\"key\":\"2\",\"val\":\"Copy\",\"icon\":\"px-utl:copy\"},{\"key\":\"3\",\"val\":\"Remove\",\"icon\":\"px-vis:trash-series\"},{\"key\":\"4\",\"val\":\"Notification\",\"icon\":\"px-nav:notification\"}],\"sortMode\":\"key\",\"buttonStyle\":\"icon\",\"icon\":\"px-nav:more\",\"displayValue\":\"Select\",\"disabled\":false,\"disableClear\":false,\"hideChevron\":true,\"multi\":false,\"searchMode\":false}\n       * \n       * Event fired on item selection:\n       * \n       * `px-title-on-action-clicked`\n       */\n      actionButtons: {\n        type: Object,\n        value: {},\n        observer: '_actionButtonsChanged'\n      }\n    },\n    /**\n     * Method used internally for flipping the hovered status of a tile.\n     */\n    _hover() {\n      if(this.hoverable) {\n        this._hovered = !this._hovered;\n      }\n    },\n    /**\n     * On change callback to remove overlay\n     */\n    _hoverableChanged() {\n      this.$.overlay.classList.add('overlay-remove');\n      if(this.hoverable) {\n        this.$.overlay.classList.remove('overlay-remove');\n      }\n    },\n    /**\n     * Attach event listeners for hoverable tiles.\n     */\n    attached() {\n      this.listen(this.$.overlay, 'mouseenter', '_hover');\n      this.listen(this.$.overlay, 'mouseleave', '_hover');\n    },\n    /**\n     * Detach event listeners for hoverable tiles.\n     */\n    detached() {\n      this.unlisten(this.$.overlay, 'mouseenter');\n      this.unlisten(this.$.overlay, 'mouseleave');\n    },\n    /**\n     * Returns class to control overlay for hoverable tiles.\n     */\n    _getClass(hovered) {\n      return hovered ? 'hovered' : '';\n    },\n    _actionButtonsChanged() {\n      if(this.actionButtons.items && this.actionButtons.items.length) {\n        this._hasActionButtons = true;\n        //console.log('changing custom style to 2rem');\n        //this.$.description.setAttribute('style', 'max-height: 2rem; margin-top: 10px;') \n      } else {\n        //console.log('removing custom style of 2rem');\n        this._hasActionButtons = false;\n        //this.$.description.setAttribute('style', '');\n      }\n    }\n    /**\n     * Fires px-title-on-action-clicked with selection detail. E.g. {key: \"1\", val: \"Favorite\", selected: true}\n     * @event px-title-on-action-clicked  \n     */\n  });\n})();\n"]}